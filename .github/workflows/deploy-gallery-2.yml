
name: Run Terraform

on:
  workflow_call:
    inputs:
      terraform_version:
        required: false
        type: string
        default: 1.8.0
        description: Version of terraform to use.
      terraform_folder:
        required: false
        type: string
        default: terraform/image_gallery
        description: Location of terraform code.
      compute_gallery_rg:
        required: true
        type: string
        description: Resource group of the destination compute gallery.
      compute_gallery:
        required: true
        type: string
        description: Name of the destination compute gallery.
      image_definition_baseline:
        required: true
        type: string
        description: Name of the destination image definition for baseline image.
      image_definition_generalized:
        required: true
        type: string
        description: Name of the destination image definition for generalized image.
      vnet_cidr:
        required: true
        type: string
        description: CIDR range to deploy VM testing environment.
      ad_group:
        required: true
        type: string
        description: Name of the team's AD group in the Azure tenant.
      client_id:
        required: true
        type: string
        description: Azure service principal client ID.
      tenant_id:
        type: string
        description: Azure service princiapl teanant ID.
      subscription_id:
        required: true
        type: string
        description:  Azure service princiapl subscription ID.
    secrets:
      client_secret:
        required: true
        description: Azure service principal client secret.

env:
  ARM_CLIENT_ID: ${{ inputs.client_id }}
  ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
  ARM_TENANT_ID: ${{ inputs.tenant_id }}
  ARM_SUBSCRIPTION_ID: ${{ inputs.subscription_id }}
  TF_VAR_rg: ${{ inputs.compute_gallery_rg }}
  TF_VAR_shared_gallery: ${{ inputs.compute_gallery }}
  TF_VAR_image_definition_baseline: ${{ inputs.image_definition_baseline }}
  TF_VAR_image_definition_generalized: ${{ inputs.image_definition_generalized }}
  TF_VAR_vnet_cidr: ${{ inputs.vnet_cidr }}
  TF_VAR_ad_group: ${{ inputs.ad_group }}
  WD: called/${{ inputs.terraform_folder }}

jobs:
  build:
    name: Call Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.WD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: caller

      - name: Checkout shared-workflows repository
        uses: actions/checkout@v4
        with:
          repository: VaidheeswaranS/packer-builds-shared-workflows
          path: called

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ inputs.terraform_version }}"

      - name: Terraform Init
        id: init
        run: 'terraform init -backend-config="key=${{ inputs.compute_gallery }}/terraform.tfstate"'

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Destory
        id: destroy
        run: terraform destroy -auto-approve -input=false

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan

      # - name: Terraform Apply
      #   id: apply
      #   run: terraform apply -auto-approve -input=false

      # - name: Terraform Output
      #   id: outputs
      #   run: terraform output

      # - name: Create TFVars
      #   id: tfvars
      #   run: echo '${{ steps.outputs.outputs.stdout }}' > gallery.tfvars
      
      # - name: Upload TFVars
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: gallery.tfvars
      #     path: ${{ env.WD }}/gallery.tfvars
